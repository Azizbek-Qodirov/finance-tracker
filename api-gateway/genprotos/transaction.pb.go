// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.1
// source: finance-protos/transaction.proto

package genprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionCReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId   string  `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId  string  `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Amount      float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type        string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TransactionCReq) Reset() {
	*x = TransactionCReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_protos_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCReq) ProtoMessage() {}

func (x *TransactionCReq) ProtoReflect() protoreflect.Message {
	mi := &file_finance_protos_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCReq.ProtoReflect.Descriptor instead.
func (*TransactionCReq) Descriptor() ([]byte, []int) {
	return file_finance_protos_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionCReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionCReq) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionCReq) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *TransactionCReq) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionCReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionCReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TransactionCReqForSwagger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   string  `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId  string  `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Amount      float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type        string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TransactionCReqForSwagger) Reset() {
	*x = TransactionCReqForSwagger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_protos_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCReqForSwagger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCReqForSwagger) ProtoMessage() {}

func (x *TransactionCReqForSwagger) ProtoReflect() protoreflect.Message {
	mi := &file_finance_protos_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCReqForSwagger.ProtoReflect.Descriptor instead.
func (*TransactionCReqForSwagger) Descriptor() ([]byte, []int) {
	return file_finance_protos_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionCReqForSwagger) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionCReqForSwagger) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *TransactionCReqForSwagger) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionCReqForSwagger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionCReqForSwagger) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TransactionGRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId       string  `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId      string  `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Amount          float32 `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type            string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Description     string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreatedDatetime string  `protobuf:"bytes,8,opt,name=created_datetime,json=createdDatetime,proto3" json:"created_datetime,omitempty"`
}

func (x *TransactionGRes) Reset() {
	*x = TransactionGRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_protos_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGRes) ProtoMessage() {}

func (x *TransactionGRes) ProtoReflect() protoreflect.Message {
	mi := &file_finance_protos_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGRes.ProtoReflect.Descriptor instead.
func (*TransactionGRes) Descriptor() ([]byte, []int) {
	return file_finance_protos_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionGRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionGRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionGRes) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionGRes) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *TransactionGRes) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionGRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionGRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionGRes) GetCreatedDatetime() string {
	if x != nil {
		return x.CreatedDatetime
	}
	return ""
}

type TransactionGAReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId  string      `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId string      `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Amount     float32     `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type       string      `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	DateFrom   string      `protobuf:"bytes,6,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo     string      `protobuf:"bytes,7,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Pagination *Pagination `protobuf:"bytes,8,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *TransactionGAReq) Reset() {
	*x = TransactionGAReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_protos_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGAReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGAReq) ProtoMessage() {}

func (x *TransactionGAReq) ProtoReflect() protoreflect.Message {
	mi := &file_finance_protos_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGAReq.ProtoReflect.Descriptor instead.
func (*TransactionGAReq) Descriptor() ([]byte, []int) {
	return file_finance_protos_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionGAReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionGAReq) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TransactionGAReq) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *TransactionGAReq) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionGAReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionGAReq) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *TransactionGAReq) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *TransactionGAReq) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type TransactionGARes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TransactionGRes `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TransactionGARes) Reset() {
	*x = TransactionGARes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_protos_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGARes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGARes) ProtoMessage() {}

func (x *TransactionGARes) ProtoReflect() protoreflect.Message {
	mi := &file_finance_protos_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGARes.ProtoReflect.Descriptor instead.
func (*TransactionGARes) Descriptor() ([]byte, []int) {
	return file_finance_protos_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionGARes) GetTransactions() []*TransactionGRes {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_finance_protos_transaction_proto protoreflect.FileDescriptor

var file_finance_protos_transaction_proto_rawDesc = []byte{
	0x0a, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x19, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x6f, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x72, 0x53, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf3, 0x01,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x41, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x41, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x65, 0x73, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xe3, 0x01, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x0d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x18,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x0d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x79, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x12, 0x3e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x41, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x41, 0x52, 0x65, 0x73,
	0x42, 0x0c, 0x5a, 0x0a, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_finance_protos_transaction_proto_rawDescOnce sync.Once
	file_finance_protos_transaction_proto_rawDescData = file_finance_protos_transaction_proto_rawDesc
)

func file_finance_protos_transaction_proto_rawDescGZIP() []byte {
	file_finance_protos_transaction_proto_rawDescOnce.Do(func() {
		file_finance_protos_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_finance_protos_transaction_proto_rawDescData)
	})
	return file_finance_protos_transaction_proto_rawDescData
}

var file_finance_protos_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_finance_protos_transaction_proto_goTypes = []any{
	(*TransactionCReq)(nil),           // 0: finance.TransactionCReq
	(*TransactionCReqForSwagger)(nil), // 1: finance.TransactionCReqForSwagger
	(*TransactionGRes)(nil),           // 2: finance.TransactionGRes
	(*TransactionGAReq)(nil),          // 3: finance.TransactionGAReq
	(*TransactionGARes)(nil),          // 4: finance.TransactionGARes
	(*Pagination)(nil),                // 5: finance.Pagination
	(*ByID)(nil),                      // 6: finance.ByID
	(*Void)(nil),                      // 7: finance.Void
}
var file_finance_protos_transaction_proto_depIdxs = []int32{
	5, // 0: finance.TransactionGAReq.pagination:type_name -> finance.Pagination
	2, // 1: finance.TransactionGARes.transactions:type_name -> finance.TransactionGRes
	0, // 2: finance.TransactionService.Create:input_type -> finance.TransactionCReq
	6, // 3: finance.TransactionService.GetByID:input_type -> finance.ByID
	6, // 4: finance.TransactionService.Delete:input_type -> finance.ByID
	3, // 5: finance.TransactionService.GetAll:input_type -> finance.TransactionGAReq
	7, // 6: finance.TransactionService.Create:output_type -> finance.Void
	2, // 7: finance.TransactionService.GetByID:output_type -> finance.TransactionGRes
	7, // 8: finance.TransactionService.Delete:output_type -> finance.Void
	4, // 9: finance.TransactionService.GetAll:output_type -> finance.TransactionGARes
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_finance_protos_transaction_proto_init() }
func file_finance_protos_transaction_proto_init() {
	if File_finance_protos_transaction_proto != nil {
		return
	}
	file_finance_protos_void_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_finance_protos_transaction_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionCReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_protos_transaction_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionCReqForSwagger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_protos_transaction_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionGRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_protos_transaction_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionGAReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_protos_transaction_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionGARes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finance_protos_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_finance_protos_transaction_proto_goTypes,
		DependencyIndexes: file_finance_protos_transaction_proto_depIdxs,
		MessageInfos:      file_finance_protos_transaction_proto_msgTypes,
	}.Build()
	File_finance_protos_transaction_proto = out.File
	file_finance_protos_transaction_proto_rawDesc = nil
	file_finance_protos_transaction_proto_goTypes = nil
	file_finance_protos_transaction_proto_depIdxs = nil
}
